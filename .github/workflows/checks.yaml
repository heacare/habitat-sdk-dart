name: checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      dart_versions: ${{ steps.dart_versions.outputs.result }}
      flutter_versions: ${{ steps.flutter_versions.outputs.result }}
      packages: ${{ steps.packages.outputs.result }}
    steps:
      - uses: actions/checkout@v3
      - name: Generate packages
        id: packages
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs/promises');
            return await fs.readdir('packages');
      - name: Generate Dart versions
        id: dart_versions
        uses: actions/github-script@v6
        with:
          script: |
            return ['2.17.6'];
      - name: Generate Flutter versions
        id: flutter_versions
        uses: actions/github-script@v6
        with:
          script: |
            return ['3.0.5'];

  analyze:
    runs-on: ubuntu-latest
    needs: [generate-matrix]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.generate-matrix.outputs.packages) }}
        dart: ${{ fromJSON(needs.generate-matrix.outputs.dart_versions) }}
        flutter: ['${{ fromJSON(needs.generate-matrix.outputs.flutter_versions)[0] }}']
    defaults:
      run:
        working-directory: packages/${{ matrix.package }}
    steps:
      - uses: subosito/flutter-action@6c2e035f2692eeac890d854df95630c72673f130
        with:
          flutter-version: ${{ matrix.flutter }}
          cache: true
      - uses: actions/cache@v3
        with:
          path: ${{ runner.tool_cache }}/dart-sdk
          key: ${{ runner.os }}-dart-sdk-${{ matrix.dart }}
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ matrix.dart }}
      - uses: actions/checkout@v3
      - name: Set up problem matcher
        run: echo "::add-matcher::.github/matcher-dart.json"
      - uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-dart-pub-cache-${{ hashFiles('**/pubspec.yaml')}}
      - run: dart pub get
      - run: dart analyze . | sed 's/^   info/warning/g'

  format:
    runs-on: ubuntu-latest
    needs: [generate-matrix]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.generate-matrix.outputs.packages) }}
        dart: ['${{ fromJSON(needs.generate-matrix.outputs.dart_versions)[0] }}']
        flutter: ['${{ fromJSON(needs.generate-matrix.outputs.flutter_versions)[0] }}']
    defaults:
      run:
        working-directory: packages/${{ matrix.package }}
    steps:
      - uses: actions/cache@v3
        with:
          path: ${{ runner.tool_cache }}/dart-sdk
          key: ${{ runner.os }}-dart-sdk-${{ matrix.dart }}
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ matrix.dart }}
      - uses: actions/checkout@v3
      - name: Set up problem matcher
        run: echo "::add-matcher::.github/matcher-dart.json"
      - run: dart format . --output none --set-exit-if-changed

  test:
    runs-on: ubuntu-latest
    needs: [generate-matrix]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.generate-matrix.outputs.packages) }}
        dart: ${{ fromJSON(needs.generate-matrix.outputs.dart_versions) }}
        flutter: ${{ fromJSON(needs.generate-matrix.outputs.flutter_versions) }}
    defaults:
      run:
        working-directory: packages/${{ matrix.package }}
    steps:
      - uses: subosito/flutter-action@6c2e035f2692eeac890d854df95630c72673f130
        with:
          flutter-version: ${{ matrix.flutter }}
          cache: true
      - uses: actions/cache@v3
        with:
          path: ${{ runner.tool_cache }}/dart-sdk
          key: ${{ runner.os }}-dart-sdk-${{ matrix.dart }}
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: ${{ matrix.dart }}
      - uses: actions/checkout@v3
      - name: Set up problem matcher
        run: echo "::add-matcher::.github/matcher-dart.json"
      - uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-dart-pub-cache-${{ hashFiles('**/pubspec.yaml')}}
      - run: dart pub get
      - run: dart run webcrypto:setup
      - run: dart test .

# vim: set et ts=2 sw=2:
